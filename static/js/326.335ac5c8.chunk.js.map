{"version":3,"file":"static/js/326.335ac5c8.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Loaders/SkeletonPost.jsx","pages/Layout/Layout.styled.jsx","components/AppBar/AppBar.jsx","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/EditForm/EditForm.jsx","components/Footer/Footer.jsx","components/UserMenu/UserMenu.jsx","components/NavBar/NavBar.jsx","pages/Layout/Layout.jsx","redux/filter/filterSelectors.js"],"sourcesContent":["import { SimpleGrid } from '@chakra-ui/react';\nimport { ContactListItem } from '../index';\n\nexport const ContactList = ({ contacts = [] }) => {\n  return (\n    <>\n      <SimpleGrid\n        spacing={4}\n        templateColumns=\"repeat(auto-fill, minmax(300px, 1fr))\"\n      >\n        {contacts.map(contact => (\n          <ContactListItem key={contact.id} contact={contact} />\n        ))}\n      </SimpleGrid>\n    </>\n  );\n};\n","import { Search2Icon } from '@chakra-ui/icons';\nimport { Box, Input, InputGroup, InputLeftElement } from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport filterSelectors from '../../redux/filter/filterSelectors';\nimport { setFilter } from '../../redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(filterSelectors.getFilterValue);\n  const handleFilterChange = event => {\n    const filtered = event.target.value;\n    dispatch(setFilter(filtered));\n  };\n  return (\n    <>\n      <Box my=\"20px\" mx=\"auto\" maxW=\"700px\">\n        <form>\n          <InputGroup size=\"lg\">\n            <InputLeftElement\n              pointerEvents=\"none\"\n              children={<Search2Icon color=\"purple.600\" />}\n            />\n            <Input\n              value={filterValue}\n              onChange={handleFilterChange}\n              type=\"text\"\n              focusBorderColor=\"purple.600\"\n              _placeholder={{ opacity: 0.6, color: 'purple.800' }}\n              placeholder=\"Search contacts...\"\n            />\n          </InputGroup>\n        </form>\n      </Box>\n    </>\n  );\n};\n","import { Box, SkeletonCircle, SkeletonText } from '@chakra-ui/react';\n\nexport const SkeletonPost = () => {\n  return (\n    <>\n      <Box padding=\"3\" boxShadow=\"lg\" bg=\"white\">\n        <SkeletonCircle size=\"6\" />\n        <SkeletonText mt=\"4\" noOfLines={2} spacing=\"4\" skeletonHeight=\"2\" />\n      </Box>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from '@chakra-ui/react';\n\nexport const LinkStyled = styled(Link)`\n  font-size: 18px;\n  font-weight: 700;\n\n  &.active {\n    color: #682687;\n  }\n`;\n\nexport const Logo = styled(Link)`\n  font-weight: 700;\n  font-size: 24px;\n\n  &:hover {\n    text-decoration: none;\n  }\n`;\n","import { Box, Button } from '@chakra-ui/react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useGetUserQuery } from '../../redux/auth/authApiSlice';\nimport authSelectors from '../../redux/auth/authSelectors';\nimport { refresh } from '../../redux/auth/authSlice';\nimport { Logo } from '../../pages/Layout/Layout.styled';\nimport { NavBar, UserMenu } from '../index';\n\nexport const AppBar = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const token = useSelector(authSelectors.getUserToken);\n\n  const { data } = useGetUserQuery(token, {\n    skip: token === null,\n  });\n\n  useEffect(() => {\n    if (data) dispatch(refresh(data));\n    // eslint-disable-next-line\n  }, [data]);\n\n  const { isLoading } = useGetUserQuery();\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  const handleClickLogin = () => {\n    navigate('/login');\n  };\n\n  return (\n    <>\n      {!isLoading && (\n        <Box\n          as=\"header\"\n          maxWidth=\"1200px\"\n          width=\"100%\"\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          mx=\"auto\"\n          px=\"10px\"\n          py=\"15px\"\n        >\n          <Logo as={Link} to=\"/\">\n            PhoneBook\n          </Logo>\n          {isLoggedIn ? (\n            <>\n              <NavBar />\n              <UserMenu />\n            </>\n          ) : (\n            <Button\n              onClick={handleClickLogin}\n              aria-label=\"Sign in\"\n              colorScheme=\"purple\"\n              size=\"md\"\n            >\n              Sign in\n            </Button>\n          )}\n        </Box>\n      )}\n    </>\n  );\n};\n","import { PhoneIcon } from '@chakra-ui/icons';\nimport { MdAccountCircle } from 'react-icons/md';\nimport {\n  Box,\n  Button,\n  FormControl,\n  Icon,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  useToast,\n} from '@chakra-ui/react';\nimport {\n  useGetContactsQuery,\n  usePostContactMutation,\n} from '../../redux/contacts/contactsApiSlice';\n\nexport const ContactForm = () => {\n  const toast = useToast();\n  const [postContact] = usePostContactMutation();\n  const { data } = useGetContactsQuery();\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = e.target.elements.name.value;\n    const number = e.target.elements.number.value;\n    if (data.find(cont => cont.name.toLowerCase() === name.toLowerCase())) {\n      return toast({\n        description: `${name} is already in contacts`,\n        isClosable: true,\n        status: 'error',\n      });\n    }\n    postContact({ name, number });\n    toast({\n      description: `${name} has been added to the contacts list`,\n      isClosable: true,\n      status: 'success',\n    });\n    form.reset();\n  };\n\n  return (\n    <>\n      <Box maxW=\"450px\" w=\"100%\" mx=\"auto\">\n        <form onSubmit={handleSubmitForm}>\n          <FormControl\n            display=\"flex\"\n            flexDirection=\"column\"\n            gap=\"20px\"\n            isRequired\n          >\n            <InputGroup size=\"lg\">\n              <InputLeftElement\n                pointerEvents=\"none\"\n                children={\n                  <Icon color=\"purple.600\" boxSize=\"6\" as={MdAccountCircle} />\n                }\n              />\n              <Input\n                name=\"name\"\n                placeholder=\"Name\"\n                _placeholder={{ opacity: 0.6, color: 'purple.800' }}\n                focusBorderColor=\"purple.600\"\n                type=\"text\"\n              />\n            </InputGroup>\n\n            <InputGroup size=\"lg\">\n              <InputLeftElement\n                pointerEvents=\"none\"\n                children={<PhoneIcon color=\"purple.600\" />}\n              />\n              <Input\n                type=\"tel\"\n                name=\"number\"\n                _placeholder={{ opacity: 0.6, color: 'purple.800' }}\n                focusBorderColor=\"purple.600\"\n                placeholder=\"Phone number\"\n              />\n            </InputGroup>\n            <Button colorScheme=\"purple\" size=\"md\" mt=\"20px\" type=\"submit\">\n              Add\n            </Button>\n          </FormControl>\n        </form>\n      </Box>\n    </>\n  );\n};\n","import {\n  Box,\n  Card,\n  Heading,\n  CardBody,\n  Text,\n  Flex,\n  IconButton,\n  useToast,\n} from '@chakra-ui/react';\nimport { MdDeleteOutline } from 'react-icons/md';\nimport { useDeleteContactMutation } from '../../redux/contacts/contactsApiSlice';\nimport { EditForm } from '../index';\n\nexport const ContactListItem = ({ contact = [] }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  const toast = useToast();\n  const { id, name, number } = contact;\n\n  const handleDeleteContact = () => {\n    deleteContact(id);\n    return toast({\n      description: `${name} has been deleted!`,\n      isClosable: true,\n      status: 'success',\n    });\n  };\n\n  return (\n    <>\n      <Card borderRadius=\"10px\" width=\"100%\">\n        <CardBody>\n          <Flex spacing=\"4\">\n            <Flex flex=\"1\" gap=\"5\" alignItems=\"center\" flexWrap=\"wrap\">\n              <Box\n                bg=\"purple.600\"\n                width=\"50px\"\n                height=\"50px\"\n                borderRadius=\"50%\"\n                color=\"#fff\"\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                fontSize=\"22px\"\n              >\n                {name.charAt(0)}\n              </Box>\n              <Box display=\"flex\" gap=\"10px\" flexDirection=\"column\">\n                <Heading size=\"sm\">{name}</Heading>\n                <Text>{number}</Text>\n              </Box>\n            </Flex>\n            <Box display=\"flex\" gap=\"10px\" flexDirection=\"column\">\n              <IconButton\n                onClick={handleDeleteContact}\n                variant=\"outline\"\n                isLoading={isLoading ? true : false}\n                colorScheme=\"purple\"\n                aria-label=\"Delete contact\"\n                size=\"md\"\n                fontSize=\"20px\"\n                icon={<MdDeleteOutline />}\n              />\n              <EditForm contact={contact} />\n            </Box>\n          </Flex>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n","import {\n  Button,\n  FormControl,\n  Icon,\n  IconButton,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  useDisclosure,\n  useToast,\n} from '@chakra-ui/react';\nimport { usePatchContactMutation } from '../../redux/contacts/contactsApiSlice';\nimport { MdAccountCircle, MdModeEdit } from 'react-icons/md';\nimport { PhoneIcon } from '@chakra-ui/icons';\n\nexport const EditForm = ({ contact = {} }) => {\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [patchContact, { isLoading }] = usePatchContactMutation();\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    const number = e.target.number.value;\n    if (name === '' || number === '') return;\n    const patchedContacts = { name, number };\n    patchContact({ contactId: contact.id, patchedContacts });\n    onClose();\n    toast({\n      description: `Contact ${name} updated successfully`,\n      isClosable: true,\n      status: 'success',\n    });\n  };\n\n  return (\n    <>\n      <IconButton\n        onClick={onOpen}\n        variant=\"outline\"\n        isLoading={isLoading ? true : false}\n        colorScheme=\"purple\"\n        aria-label=\"Edit contact\"\n        size=\"md\"\n        fontSize=\"20px\"\n        icon={<MdModeEdit />}\n      />\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent py=\"20px\">\n          <ModalHeader>Edit contacts</ModalHeader>\n          <ModalBody>\n            <form onSubmit={handleSubmitForm}>\n              <FormControl>\n                <InputGroup size=\"lg\">\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    children={\n                      <Icon\n                        color=\"purple.600\"\n                        boxSize=\"6\"\n                        as={MdAccountCircle}\n                      />\n                    }\n                  />\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"contact_email\"\n                    defaultValue={contact.name}\n                    placeholder=\"Name\"\n                    _placeholder={{ opacity: 0.6, color: 'purple.800' }}\n                    focusBorderColor=\"purple.600\"\n                  />\n                </InputGroup>\n              </FormControl>\n\n              <FormControl my={4}>\n                <InputGroup size=\"lg\">\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    children={<PhoneIcon color=\"purple.600\" />}\n                  />\n                  <Input\n                    type=\"tel\"\n                    name=\"number\"\n                    id=\"contact_email\"\n                    defaultValue={contact.number}\n                    _placeholder={{ opacity: 0.6, color: 'purple.800' }}\n                    focusBorderColor=\"purple.600\"\n                    placeholder=\"Phone number\"\n                  />\n                </InputGroup>\n              </FormControl>\n              <Button\n                mt={4}\n                type=\"submit\"\n                aria-label=\"Save contacts\"\n                colorScheme=\"purple\"\n                size=\"md\"\n                width=\"100%\"\n                onClick={onClose}\n              >\n                Save\n              </Button>\n            </form>\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n","import { Box, Divider, Text } from '@chakra-ui/react';\nimport { useGetUserQuery } from '../../redux/auth/authApiSlice';\n\nexport const Footer = () => {\n  const { isLoading } = useGetUserQuery();\n\n  return (\n    !isLoading && (\n      <>\n        <Box\n          as=\"footer\"\n          maxWidth=\"1200px\"\n          width=\"100%\"\n          mx=\"auto\"\n          px=\"15px\"\n          height=\"60px\"\n          display=\"flex\"\n          gap=\"20px\"\n          flexDirection=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Divider maxW=\"80%\" />\n          <Text>© 2022 | Petlovanyi A.</Text>\n        </Box>\n      </>\n    )\n  );\n};\n","import {\n  Button,\n  Wrap,\n  useToast,\n  Avatar,\n  AvatarBadge,\n  Center,\n  Divider,\n  Tag,\n  TagLabel,\n  Tooltip,\n} from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useLogOutUserMutation } from '../../redux/auth/authApiSlice';\nimport authSelectors from '../../redux/auth/authSelectors';\nimport { logOut } from '../../redux/auth/authSlice';\nimport userAvatar from '../../images/avatar/userAvatar.jpg';\n\nexport const UserMenu = () => {\n  const toast = useToast();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userName = useSelector(authSelectors.getUserName);\n  const userToken = useSelector(authSelectors.getUserToken);\n  const userEmail = useSelector(authSelectors.getUserEmail);\n  const [logOutUser] = useLogOutUserMutation();\n\n  const handleClickLogout = async () => {\n    const checkedUser = await logOutUser(userToken);\n    navigate('/');\n    dispatch(logOut(checkedUser));\n    toast({\n      description: `Goodbye, ${userName}`,\n      isClosable: true,\n      status: 'success',\n      duration: 2000,\n    });\n  };\n\n  return (\n    <>\n      <Wrap>\n        <Tooltip\n          label={userEmail}\n          colorScheme=\"purple\"\n          aria-label=\"user email\"\n          closeDelay={500}\n          hasArrow\n          arrowSize={15}\n        >\n          <Tag\n            display=\"flex\"\n            gap=\"10px\"\n            size=\"lg\"\n            colorScheme=\"purple\"\n            borderRadius=\"full\"\n          >\n            <Avatar size=\"sm\" src={userAvatar}>\n              <AvatarBadge boxSize=\"1.25em\" bg=\"green.500\" />\n            </Avatar>\n            <TagLabel fontWeight=\"600\">{userName}</TagLabel>\n          </Tag>\n        </Tooltip>\n\n        <Center height=\"auto\">\n          <Divider mx=\"15px\" orientation=\"vertical\" size=\"lg\" />\n        </Center>\n        <Button\n          onClick={handleClickLogout}\n          aria-label=\"Logout\"\n          colorScheme=\"purple\"\n          size=\"md\"\n        >\n          Logout\n        </Button>\n      </Wrap>\n    </>\n  );\n};\n","import { Breadcrumb, BreadcrumbItem } from '@chakra-ui/react';\nimport { LinkStyled } from '../../pages/Layout/Layout.styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar = () => {\n  return (\n    <>\n      <Breadcrumb display=\"flex\" gap=\"15px\" alignItems=\"center\">\n        <BreadcrumbItem>\n          <LinkStyled as={NavLink} to=\"/contacts\">\n            Contacts\n          </LinkStyled>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <LinkStyled as={NavLink} to=\"/add\">\n            Add contacts\n          </LinkStyled>\n        </BreadcrumbItem>\n      </Breadcrumb>\n    </>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Box } from '@chakra-ui/react';\nimport { AppBar, Footer } from '../../components/index';\nimport { Suspense } from 'react';\n\nconst Layout = () => {\n  return (\n    <>\n      <AppBar />\n      <Box\n        as=\"main\"\n        maxWidth=\"1200px\"\n        height=\"80vh\"\n        width=\"100%\"\n        mx=\"auto\"\n        px=\"15px\"\n      >\n        <Suspense fallback={false}>\n          <Outlet />\n        </Suspense>\n      </Box>\n      <Footer />\n    </>\n  );\n};\n\nexport default Layout;\n","const getFilterValue = state => state.filter;\n\nconst filterSelectors = { getFilterValue };\nexport default filterSelectors;\n"],"names":["ContactList","contacts","spacing","templateColumns","map","contact","id","Filter","dispatch","useDispatch","filterValue","useSelector","filterSelectors","my","mx","maxW","size","pointerEvents","children","color","value","onChange","event","filtered","target","setFilter","type","focusBorderColor","_placeholder","opacity","placeholder","SkeletonPost","padding","boxShadow","bg","mt","noOfLines","skeletonHeight","LinkStyled","styled","Link","Logo","AppBar","navigate","useNavigate","token","authSelectors","data","useGetUserQuery","skip","useEffect","refresh","isLoading","isLoggedIn","as","maxWidth","width","display","justifyContent","px","py","to","NavBar","UserMenu","onClick","colorScheme","ContactForm","toast","useToast","usePostContactMutation","postContact","useGetContactsQuery","w","onSubmit","e","preventDefault","form","name","elements","number","find","cont","toLowerCase","description","isClosable","status","reset","flexDirection","gap","isRequired","boxSize","MdAccountCircle","ContactListItem","useDeleteContactMutation","deleteContact","borderRadius","flex","alignItems","flexWrap","height","fontSize","charAt","variant","icon","EditForm","useDisclosure","isOpen","onOpen","onClose","usePatchContactMutation","patchContact","isCentered","patchedContacts","contactId","defaultValue","Footer","userName","userToken","userEmail","useLogOutUserMutation","logOutUser","handleClickLogout","checkedUser","logOut","duration","label","closeDelay","hasArrow","arrowSize","src","userAvatar","fontWeight","orientation","NavLink","Suspense","fallback","getFilterValue","state","filter"],"sourceRoot":""}