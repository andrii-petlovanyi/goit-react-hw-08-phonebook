{"version":3,"file":"static/js/643.3bf3b687.chunk.js","mappings":"kXAwMA,UA3KiB,WACf,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,MAA5BC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QACxB,GAAoCC,EAAAA,EAAAA,MAAuB,eAApDC,EAAU,KAAIC,EAAS,KAATA,UACrB,GAA0BC,EAAAA,EAAAA,UAAS,CACjCC,KAAM,GACNC,MAAO,GACPC,SAAU,KACV,eAJKC,EAAK,KAAEC,EAAQ,KAKhBC,GAAQC,EAAAA,EAAAA,MACRC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCT,EAAAA,EAAAA,WAAS,GAAM,eAAhDU,EAAY,KAAEC,EAAe,KAG9BC,GAAgBC,EAAAA,EAAAA,IAAkB,aAAc,gBAChDC,GAAoBD,EAAAA,EAAAA,IAAkB,aAAc,UACpDE,GAAWF,EAAAA,EAAAA,IAAkB,aAAc,eAEjDG,EAAAA,EAAAA,YAAU,WAER,OADArB,IACO,kBAAMC,GAAU,CAEzB,GAAG,CAACL,IAEJ,IAAM0B,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,cAAlBlB,EAAI,EAAJA,KAAMG,EAAK,EAALA,MACdC,GAAS,SAAAe,GAAK,yBAAUA,GAAK,cAAGnB,EAAOG,GAAK,GAC9C,EAMMiB,EAAgB,yCAAG,WAAMH,GAAC,4EACX,GAAnBA,EAAEI,iBACiB,KAAflB,EAAMH,MAA+B,KAAhBG,EAAMF,OAAmC,KAAnBE,EAAMD,SAAe,yCAC3DG,EAAM,CACXiB,YAAa,kCACbC,YAAY,EACZC,OAAQ,WACR,YAEArB,EAAMD,SAASuB,OAAS,GAAC,yCACpBpB,EAAM,CACXiB,YAAa,oDACbC,YAAY,EACZC,OAAQ,WACR,gCAGwB3B,EAAWM,GAAO,KAAD,EAArCuB,EAAW,OACjBtC,GAASuC,EAAAA,EAAAA,IAASD,IAClBtB,EAAS,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,SAAU,KAC1CP,IACAY,EAAS,KAAK,kDAEdF,EAAM,CACJiB,YACE,4DACFC,YAAY,EACZC,OAAQ,UACP,0DAEN,gBA9BqB,sCAqCtB,OACE,+BACE,UAAC,KAAK,CAAC/B,OAAQA,EAAQE,QAPP,WAClBA,IACAY,EAAS,IACX,EAIiDqB,YAAU,aACrD,SAAC,KAAY,KACb,UAAC,KAAY,CAACC,GAAG,OAAM,WACrB,SAAC,KAAW,CAACC,SAAS,OAAM,gCAC5B,SAAC,KAAS,CAACC,GAAG,OAAM,UAClB,kBAAMC,SAAUZ,EAAiB,WAC/B,UAAC,KAAW,CAACS,GAAG,OAAOI,YAAU,aAC/B,SAAC,KAAS,oBACV,SAAC,KAAK,CACJC,KAAK,OACLlC,KAAK,OACLmC,YAAY,OACZC,aAAc,CAAEC,QAAS,GAAKC,MAAO3B,GACrC4B,iBAAkB5B,EAClB6B,GAAG,gBACHrC,MAAOA,EAAMsC,SACbC,SAAU1B,KAEZ,SAAC,KAAS,CAAC2B,GAAG,OAAM,oBACpB,SAAC,KAAK,CACJ3C,KAAK,QACLkC,KAAK,QACLC,YAAY,oBACZC,aAAc,CAAEC,QAAS,GAAKC,MAAO3B,GACrC4B,iBAAkB5B,EAClB6B,GAAG,iBACHrC,MAAOA,EAAMF,MACbyC,SAAU1B,KAEZ,SAAC,KAAS,CAAC2B,GAAG,OAAM,uBACpB,UAAC,KAAU,YACT,SAAC,KAAK,CACJ3C,KAAK,WACLkC,KAAMzB,EAAe,OAAS,WAC9BmC,IAAK,EACLT,YAAY,WACZC,aAAc,CAAEC,QAAS,GAAKC,MAAO3B,GACrC4B,iBAAkB5B,EAClB6B,GAAG,oBACHrC,MAAOA,EAAMD,SACbwC,SAAU1B,KAEZ,SAAC,KAAiB,CAAC6B,MAAM,OAAM,UAC7B,SAAC,KAAM,CACLC,EAAE,SACFC,KAAK,KACLC,QA1Ga,WAAH,OAAStC,GAAiBD,EAAc,EA0GhB,SAEjCA,GACC,SAAC,KAAI,CAACwC,GAAIC,EAAAA,MAEV,SAAC,KAAI,CAACD,GAAIE,EAAAA,gBAMpB,UAAC,KAAG,CACFC,GAAG,OACHC,QAAQ,OACRC,cAAc,SACdC,WAAW,OAAM,WAEjB,SAAC,KAAW,WACV,SAAC,KAAM,CACLzD,YAAWA,EACX+C,MAAM,OACNX,KAAK,SACL,aAAW,UACXsB,GAAI3C,EACJ4C,QAAS,CAAEC,WAAY7C,GACvB8C,OAAQ,CAAED,WAAY5C,GACtBiC,KAAK,KAAI,+BAKb,UAAC,KAAI,CAACM,QAAQ,OAAOD,GAAG,OAAOT,GAAG,OAAOb,SAAS,KAAI,iCAEpD,SAAC,KAAI,CACH8B,GAAG,MACHtB,OAAO1B,EAAAA,EAAAA,IAAkB,aAAc,YACvCkB,SAAS,KACTkB,QA9HO,WACvBzC,EAAS,SACX,EA4H4C,uCAY9C,C","sources":["pages/Register/Register.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  useDisclosure,\n  Button,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  FormControl,\n  FormLabel,\n  Input,\n  useToast,\n  Text,\n  InputGroup,\n  InputRightElement,\n  Icon,\n  Box,\n  useColorModeValue,\n  Link,\n} from '@chakra-ui/react';\nimport { useSignUpUserMutation } from '../../redux/auth/authApiSlice';\nimport { register } from '../../redux/auth/authSlice';\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\nimport { ButtonFrame } from '../../components';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [signUpUser, { isLoading }] = useSignUpUserMutation();\n  const [value, setValue] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  const toast = useToast();\n  const navigate = useNavigate();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handlePasswordVisibility = () => setShowPassword(!showPassword);\n\n  const backgroundBtn = useColorModeValue('purple.600', 'btnOutlineBG');\n  const backgroundBtnSave = useColorModeValue('purple.600', 'darkBG');\n  const hoverBtn = useColorModeValue('hoverWhite', 'hoverBlack');\n\n  useEffect(() => {\n    onOpen();\n    return () => onClose();\n    // eslint-disable-next-line\n  }, [location]);\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    setValue(state => ({ ...state, [name]: value }));\n  };\n\n  const handleClickLogin = () => {\n    navigate('/login');\n  };\n\n  const handleSubmitForm = async e => {\n    e.preventDefault();\n    if (value.name === '' || value.email === '' || value.password === '')\n      return toast({\n        description: 'Please, fill all fields form...',\n        isClosable: true,\n        status: 'error',\n      });\n\n    if (value.password.length < 7)\n      return toast({\n        description: 'Password length must be more than 7 characters...',\n        isClosable: true,\n        status: 'error',\n      });\n\n    try {\n      const checkedUser = await signUpUser(value);\n      dispatch(register(checkedUser));\n      setValue({ name: '', email: '', password: '' });\n      onClose();\n      navigate('/');\n    } catch (error) {\n      toast({\n        description:\n          'Something went wrong...Maybe, this user already exists...',\n        isClosable: true,\n        status: 'error',\n      });\n    }\n  };\n\n  const handleClose = () => {\n    onClose();\n    navigate('/');\n  };\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={handleClose} isCentered>\n        <ModalOverlay />\n        <ModalContent py=\"20px\">\n          <ModalHeader fontSize=\"30px\">Create an account</ModalHeader>\n          <ModalBody pb=\"20px\">\n            <form onSubmit={handleSubmitForm}>\n              <FormControl py=\"20px\" isRequired>\n                <FormLabel>Name</FormLabel>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Name\"\n                  _placeholder={{ opacity: 0.6, color: backgroundBtn }}\n                  focusBorderColor={backgroundBtn}\n                  id=\"register_name\"\n                  value={value.nickname}\n                  onChange={handleInputChange}\n                />\n                <FormLabel pt=\"20px\">Email</FormLabel>\n                <Input\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"example@gmail.com\"\n                  _placeholder={{ opacity: 0.6, color: backgroundBtn }}\n                  focusBorderColor={backgroundBtn}\n                  id=\"register_email\"\n                  value={value.email}\n                  onChange={handleInputChange}\n                />\n                <FormLabel pt=\"20px\">Password</FormLabel>\n                <InputGroup>\n                  <Input\n                    name=\"password\"\n                    type={showPassword ? 'text' : 'password'}\n                    min={7}\n                    placeholder=\"********\"\n                    _placeholder={{ opacity: 0.6, color: backgroundBtn }}\n                    focusBorderColor={backgroundBtn}\n                    id=\"register_password\"\n                    value={value.password}\n                    onChange={handleInputChange}\n                  />\n                  <InputRightElement width=\"3rem\">\n                    <Button\n                      h=\"1.5rem\"\n                      size=\"sm\"\n                      onClick={handlePasswordVisibility}\n                    >\n                      {showPassword ? (\n                        <Icon as={ViewIcon} />\n                      ) : (\n                        <Icon as={ViewOffIcon} />\n                      )}\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n              </FormControl>\n              <Box\n                mx=\"auto\"\n                display=\"flex\"\n                flexDirection=\"column\"\n                paddingTop=\"40px\"\n              >\n                <ButtonFrame>\n                  <Button\n                    isLoading={isLoading ? true : false}\n                    width=\"100%\"\n                    type=\"submit\"\n                    aria-label=\"Sign up\"\n                    bg={backgroundBtnSave}\n                    _active={{ background: backgroundBtnSave }}\n                    _hover={{ background: hoverBtn }}\n                    size=\"md\"\n                  >\n                    Create account\n                  </Button>\n                </ButtonFrame>\n                <Text display=\"flex\" mx=\"auto\" pt=\"20px\" fontSize=\"md\">\n                  Already registered?\n                  <Link\n                    pl=\"5px\"\n                    color={useColorModeValue('purple.600', 'teal.400')}\n                    fontSize=\"md\"\n                    onClick={handleClickLogin}\n                  >\n                    Sign in\n                  </Link>\n                </Text>\n              </Box>\n            </form>\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["dispatch","useDispatch","location","useLocation","useDisclosure","isOpen","onOpen","onClose","useSignUpUserMutation","signUpUser","isLoading","useState","name","email","password","value","setValue","toast","useToast","navigate","useNavigate","showPassword","setShowPassword","backgroundBtn","useColorModeValue","backgroundBtnSave","hoverBtn","useEffect","handleInputChange","e","currentTarget","state","handleSubmitForm","preventDefault","description","isClosable","status","length","checkedUser","register","isCentered","py","fontSize","pb","onSubmit","isRequired","type","placeholder","_placeholder","opacity","color","focusBorderColor","id","nickname","onChange","pt","min","width","h","size","onClick","as","ViewIcon","ViewOffIcon","mx","display","flexDirection","paddingTop","bg","_active","background","_hover","pl"],"sourceRoot":""}