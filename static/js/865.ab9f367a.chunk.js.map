{"version":3,"file":"static/js/865.ab9f367a.chunk.js","mappings":"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","sources":["pages/Layout/Layout.styled.jsx","components/Theme/toggleColorMode.js","components/AppBar/AppBar.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/ContactListItem/ContactListItem.jsx","components/EditForm/EditForm.jsx","components/Filter/Filter.jsx","components/Footer/Footer.jsx","components/UserMenu/UserMenu.jsx","components/NavBar/NavBar.jsx","components/Section/Section.jsx","components/Loaders/SkeletonPost.jsx","redux/filter/filterSelectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link, useColorModeValue } from '@chakra-ui/react';\n\nexport const LinkStyled = styled(Link)`\n  font-size: 18px;\n  font-weight: 700;\n\n  &.active {\n    color: ${props => useColorModeValue('#553C9A', '#e2e2e2')};\n  }\n`;\n\nexport const Logo = styled(Link)`\n  font-weight: 700;\n  font-size: 24px;\n\n  &:hover {\n    text-decoration: none;\n  }\n`;\n","import { MoonIcon, SunIcon } from '@chakra-ui/icons';\nimport { IconButton, useColorMode, useColorModeValue } from '@chakra-ui/react';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nexport const ToggleColorMode = () => {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const isMode = colorMode === 'light';\n  return (\n    <AnimatePresence mode=\"wait\">\n      <motion.div\n        style={{ display: 'inline-block' }}\n        key={useColorModeValue('Light', 'Dark')}\n        initial={{ y: -20, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        exit={{ y: 20, opacity: 0 }}\n        transition={{ duration: 0.2 }}\n      >\n        <IconButton\n          aria-label=\"Toggle theme\"\n          onClick={toggleColorMode}\n          fontSize=\"20px\"\n          icon={useColorModeValue(<MoonIcon />, <SunIcon />)}\n          color={useColorModeValue('white', 'white')}\n          bg={useColorModeValue('whiteBG', 'darkBG')}\n          _active\n          _hover={{ background: useColorModeValue('hoverWhite', 'hoverBlack') }}\n        >\n          {isMode ? 'Dark' : 'Light'}\n        </IconButton>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n","import { Box, Button, useColorModeValue } from '@chakra-ui/react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useGetUserQuery } from '../../redux/auth/authApiSlice';\nimport authSelectors from '../../redux/auth/authSelectors';\nimport { refresh } from '../../redux/auth/authSlice';\nimport { Logo } from '../../pages/Layout/Layout.styled';\nimport { NavBar, UserMenu } from '../index';\nimport { ToggleColorMode } from '../Theme/toggleColorMode';\n\nexport const AppBar = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const token = useSelector(authSelectors.getUserToken);\n  const backgroundBtn = useColorModeValue('whiteBG', 'darkBG');\n  const hoverBtn = useColorModeValue('hoverWhite', 'hoverBlack');\n\n  const { data } = useGetUserQuery(token, {\n    skip: token === null,\n  });\n\n  useEffect(() => {\n    if (data) dispatch(refresh(data));\n    // eslint-disable-next-line\n  }, [data]);\n\n  const { isLoading } = useGetUserQuery();\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  const handleClickLogin = () => {\n    navigate('/login');\n  };\n\n  return (\n    <>\n      <Box\n        as=\"header\"\n        maxWidth=\"1200px\"\n        width=\"100%\"\n        height=\"80px\"\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        mx=\"auto\"\n        py=\"20px\"\n      >\n        <Logo as={Link} to=\"/\">\n          PhoneBook\n        </Logo>\n        {isLoggedIn && !isLoading && (\n          <>\n            <NavBar />\n            <UserMenu />\n          </>\n        )}\n        {!isLoggedIn && !isLoading && (\n          <>\n            <Box\n              display=\"flex\"\n              gap=\"10px\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <ToggleColorMode />\n              <Button\n                onClick={handleClickLogin}\n                aria-label=\"Sign in\"\n                size=\"md\"\n                bg={backgroundBtn}\n                _active\n                _hover={{\n                  background: hoverBtn,\n                }}\n              >\n                Sign in\n              </Button>\n            </Box>\n          </>\n        )}\n      </Box>\n    </>\n  );\n};\n","import { PhoneIcon } from '@chakra-ui/icons';\nimport { MdAccountCircle } from 'react-icons/md';\nimport {\n  Box,\n  Button,\n  FormControl,\n  Icon,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  useColorModeValue,\n  useToast,\n} from '@chakra-ui/react';\nimport {\n  useGetContactsQuery,\n  usePostContactMutation,\n} from '../../redux/contacts/contactsApiSlice';\n\nexport const ContactForm = () => {\n  const toast = useToast();\n  const [postContact] = usePostContactMutation();\n  const { data } = useGetContactsQuery();\n\n  const backgroundBtn = useColorModeValue('purple.600', 'btnOutlineBG');\n  const backgroundBtnSave = useColorModeValue('purple.600', 'darkBG');\n  const hoverBtn = useColorModeValue('hoverWhite', 'hoverBlack');\n\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = e.target.elements.name.value;\n    const number = e.target.elements.number.value;\n    if (data.find(cont => cont.name.toLowerCase() === name.toLowerCase())) {\n      return toast({\n        description: `${name} is already in contacts`,\n        isClosable: true,\n        status: 'error',\n      });\n    }\n    postContact({ name, number });\n    toast({\n      description: `${name} has been added to the contacts list`,\n      isClosable: true,\n      status: 'success',\n    });\n    form.reset();\n  };\n\n  return (\n    <>\n      <Box maxW=\"450px\" w=\"100%\" mx=\"auto\">\n        <form onSubmit={handleSubmitForm}>\n          <FormControl\n            display=\"flex\"\n            flexDirection=\"column\"\n            gap=\"20px\"\n            isRequired\n          >\n            <InputGroup size=\"lg\">\n              <InputLeftElement\n                pointerEvents=\"none\"\n                children={\n                  <Icon\n                    color={backgroundBtn}\n                    boxSize=\"6\"\n                    as={MdAccountCircle}\n                  />\n                }\n              />\n              <Input\n                name=\"name\"\n                placeholder=\"Name\"\n                _placeholder={{ opacity: 0.6, color: backgroundBtn }}\n                focusBorderColor={backgroundBtn}\n                type=\"text\"\n              />\n            </InputGroup>\n\n            <InputGroup size=\"lg\">\n              <InputLeftElement\n                pointerEvents=\"none\"\n                children={<PhoneIcon color={backgroundBtn} />}\n              />\n              <Input\n                type=\"tel\"\n                name=\"number\"\n                _placeholder={{ opacity: 0.6, color: backgroundBtn }}\n                focusBorderColor={backgroundBtn}\n                placeholder=\"Phone number\"\n              />\n            </InputGroup>\n            <Button\n              color=\"mainWhite\"\n              bg={backgroundBtnSave}\n              _active={{ background: backgroundBtnSave }}\n              _hover={{ background: hoverBtn }}\n              size=\"md\"\n              mt=\"20px\"\n              type=\"submit\"\n            >\n              Add\n            </Button>\n          </FormControl>\n        </form>\n      </Box>\n    </>\n  );\n};\n","import { SimpleGrid } from '@chakra-ui/react';\nimport { ContactListItem } from '../index';\n\nexport const ContactList = ({ contacts = [] }) => {\n  return (\n    <>\n      <SimpleGrid\n        spacing={4}\n        templateColumns=\"repeat(auto-fill, minmax(300px, 1fr))\"\n      >\n        {contacts.map(contact => (\n          <ContactListItem key={contact.id} contact={contact} />\n        ))}\n      </SimpleGrid>\n    </>\n  );\n};\n","import {\n  Box,\n  Card,\n  Heading,\n  CardBody,\n  Text,\n  Flex,\n  IconButton,\n  useToast,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { MdDeleteOutline } from 'react-icons/md';\nimport { useDeleteContactMutation } from '../../redux/contacts/contactsApiSlice';\nimport { EditForm } from '../index';\n\nexport const ContactListItem = ({ contact = [] }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  const toast = useToast();\n  const { id, name, number } = contact;\n\n  const backgroundBtn = useColorModeValue('purple.600', 'btnOutlineBG');\n  const hoverBtn = useColorModeValue('hoverWhite', 'hoverBlack');\n  const backgroundAvatar = useColorModeValue('purple.600', 'darkBG');\n  const lightBackground = useColorModeValue(\n    'lightBtnBGWhite',\n    'lightBtnBGDark'\n  );\n\n  const handleDeleteContact = () => {\n    deleteContact(id);\n    return toast({\n      description: `${name} has been deleted!`,\n      isClosable: true,\n      status: 'success',\n    });\n  };\n\n  return (\n    <>\n      <Card borderRadius=\"10px\" width=\"100%\">\n        <CardBody>\n          <Flex spacing=\"4\">\n            <Flex flex=\"1\" gap=\"5\" alignItems=\"center\" flexWrap=\"wrap\">\n              <Box\n                width=\"55px\"\n                height=\"55px\"\n                borderRadius=\"50%\"\n                color=\"mainWhite\"\n                bg={backgroundAvatar}\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                fontSize=\"22px\"\n              >\n                {name.charAt(0)}\n              </Box>\n              <Box display=\"flex\" gap=\"10px\" flexDirection=\"column\">\n                <Heading size=\"sm\">{name}</Heading>\n                <Text>{number}</Text>\n              </Box>\n            </Flex>\n            <Box display=\"flex\" gap=\"10px\" flexDirection=\"column\">\n              <IconButton\n                onClick={handleDeleteContact}\n                variant=\"outline\"\n                isLoading={isLoading ? true : false}\n                color={backgroundBtn}\n                bg=\"none\"\n                borderColor={backgroundBtn}\n                _active={{ color: backgroundBtn, borderColor: backgroundBtn }}\n                _hover={{\n                  color: hoverBtn,\n                  background: lightBackground,\n                  borderColor: hoverBtn,\n                }}\n                aria-label=\"Delete contact\"\n                size=\"md\"\n                fontSize=\"20px\"\n                icon={<MdDeleteOutline />}\n              />\n              <EditForm contact={contact} />\n            </Box>\n          </Flex>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n","import {\n  Button,\n  FormControl,\n  Icon,\n  IconButton,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  useColorModeValue,\n  useDisclosure,\n  useToast,\n} from '@chakra-ui/react';\nimport { usePatchContactMutation } from '../../redux/contacts/contactsApiSlice';\nimport { MdAccountCircle, MdModeEdit } from 'react-icons/md';\nimport { PhoneIcon } from '@chakra-ui/icons';\n\nexport const EditForm = ({ contact = {} }) => {\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [patchContact, { isLoading }] = usePatchContactMutation();\n\n  const backgroundBtn = useColorModeValue('purple.600', 'btnOutlineBG');\n  const backgroundBtnSave = useColorModeValue('purple.600', 'darkBG');\n  const hoverBtn = useColorModeValue('hoverWhite', 'hoverBlack');\n  const lightBackground = useColorModeValue(\n    'lightBtnBGWhite',\n    'lightBtnBGDark'\n  );\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    const number = e.target.number.value;\n    if (name === '' || number === '') return;\n    const patchedContacts = { name, number };\n    patchContact({ contactId: contact.id, patchedContacts });\n    onClose();\n    toast({\n      description: `Contact ${name} updated successfully`,\n      isClosable: true,\n      status: 'success',\n    });\n  };\n\n  return (\n    <>\n      <IconButton\n        onClick={onOpen}\n        variant=\"outline\"\n        isLoading={isLoading ? true : false}\n        bg=\"none\"\n        color={backgroundBtn}\n        borderColor={backgroundBtn}\n        _active={{ color: backgroundBtn, borderColor: backgroundBtn }}\n        _hover={{\n          color: hoverBtn,\n          background: lightBackground,\n          borderColor: hoverBtn,\n        }}\n        aria-label=\"Edit contact\"\n        size=\"md\"\n        fontSize=\"20px\"\n        icon={<MdModeEdit bg={backgroundBtn} />}\n      />\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent py=\"20px\">\n          <ModalHeader>Edit contacts</ModalHeader>\n          <ModalBody>\n            <form onSubmit={handleSubmitForm}>\n              <FormControl>\n                <InputGroup size=\"lg\">\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    children={\n                      <Icon\n                        color={backgroundBtn}\n                        boxSize=\"6\"\n                        as={MdAccountCircle}\n                      />\n                    }\n                  />\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"contact_email\"\n                    defaultValue={contact.name}\n                    placeholder=\"Name\"\n                    _placeholder={{ opacity: 0.6, color: backgroundBtn }}\n                    focusBorderColor={backgroundBtn}\n                  />\n                </InputGroup>\n              </FormControl>\n\n              <FormControl my={4}>\n                <InputGroup size=\"lg\">\n                  <InputLeftElement\n                    pointerEvents=\"none\"\n                    children={<PhoneIcon color={backgroundBtn} />}\n                  />\n                  <Input\n                    type=\"tel\"\n                    name=\"number\"\n                    id=\"contact_email\"\n                    defaultValue={contact.number}\n                    _placeholder={{ opacity: 0.6, color: backgroundBtn }}\n                    focusBorderColor={backgroundBtn}\n                    placeholder=\"Phone number\"\n                  />\n                </InputGroup>\n              </FormControl>\n              <Button\n                mt={4}\n                type=\"submit\"\n                aria-label=\"Save contacts\"\n                color=\"mainWhite\"\n                bg={backgroundBtnSave}\n                _active={{ background: backgroundBtnSave }}\n                _hover={{ background: hoverBtn }}\n                size=\"md\"\n                width=\"100%\"\n                onClick={onClose}\n              >\n                Save\n              </Button>\n            </form>\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n","import { Search2Icon } from '@chakra-ui/icons';\nimport {\n  Box,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport filterSelectors from '../../redux/filter/filterSelectors';\nimport { setFilter } from '../../redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(filterSelectors.getFilterValue);\n\n  const backgroundBtn = useColorModeValue('purple.600', 'btnOutlineBG');\n  const inputBorderColor = useColorModeValue('purple.300', 'teal.900');\n\n  const handleFilterChange = event => {\n    const filtered = event.target.value;\n    dispatch(setFilter(filtered));\n  };\n  return (\n    <>\n      <Box my=\"20px\" mx=\"auto\" maxW=\"700px\">\n        <form>\n          <InputGroup size=\"lg\">\n            <InputLeftElement\n              pointerEvents=\"none\"\n              children={<Search2Icon color={backgroundBtn} />}\n            />\n            <Input\n              value={filterValue}\n              onChange={handleFilterChange}\n              type=\"text\"\n              borderColor={inputBorderColor}\n              _hover={{ borderColor: inputBorderColor }}\n              focusBorderColor={backgroundBtn}\n              _placeholder={{ opacity: 0.6, color: backgroundBtn }}\n              placeholder=\"Search contacts...\"\n            />\n          </InputGroup>\n        </form>\n      </Box>\n    </>\n  );\n};\n","import { Box, Divider, Text } from '@chakra-ui/react';\n\nexport const Footer = () => {\n  return (\n    <>\n      <Box\n        as=\"footer\"\n        maxWidth=\"1200px\"\n        width=\"100%\"\n        mx=\"auto\"\n        px=\"15px\"\n        height=\"60px\"\n        display=\"flex\"\n        gap=\"20px\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Divider maxW=\"80%\" />\n        <Text>© 2022 | Petlovanyi A.</Text>\n      </Box>\n    </>\n  );\n};\n","import {\n  Button,\n  Wrap,\n  useToast,\n  Avatar,\n  AvatarBadge,\n  Center,\n  Divider,\n  Tag,\n  TagLabel,\n  Tooltip,\n  useColorModeValue,\n  Box,\n} from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useLogOutUserMutation } from '../../redux/auth/authApiSlice';\nimport authSelectors from '../../redux/auth/authSelectors';\nimport { logOut } from '../../redux/auth/authSlice';\nimport userAvatar from '../../images/avatar/userAvatar.jpg';\nimport { ToggleColorMode } from '../Theme/toggleColorMode';\n\nexport const UserMenu = () => {\n  const toast = useToast();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userName = useSelector(authSelectors.getUserName);\n  const userToken = useSelector(authSelectors.getUserToken);\n  const userEmail = useSelector(authSelectors.getUserEmail);\n  const [logOutUser] = useLogOutUserMutation();\n\n  const handleClickLogout = async () => {\n    const checkedUser = await logOutUser(userToken);\n    navigate('/');\n    dispatch(logOut(checkedUser));\n    toast({\n      description: `Goodbye, ${userName}`,\n      isClosable: true,\n      status: 'success',\n      duration: 2000,\n    });\n  };\n\n  return (\n    <>\n      <Wrap>\n        <Tooltip\n          label={userEmail}\n          aria-label=\"user email\"\n          closeDelay={500}\n          hasArrow\n          arrowSize={15}\n        >\n          <Tag\n            display=\"flex\"\n            gap=\"10px\"\n            size=\"lg\"\n            backgroundColor={useColorModeValue('purple.100', 'teal.900')}\n            borderRadius=\"full\"\n          >\n            <Avatar size=\"sm\" src={userAvatar}>\n              <AvatarBadge boxSize=\"1.25em\" bg=\"green.500\" />\n            </Avatar>\n            <TagLabel\n              color={useColorModeValue('#2e2e2e', 'mainWhite')}\n              fontWeight=\"600\"\n            >\n              {userName}\n            </TagLabel>\n          </Tag>\n        </Tooltip>\n\n        <Center height=\"auto\">\n          <Divider\n            opacity=\"0.5\"\n            width=\"1px\"\n            fontWeight=\"700\"\n            mx=\"15px\"\n            orientation=\"vertical\"\n            size=\"lg\"\n          />\n        </Center>\n        <Box\n          display=\"flex\"\n          gap=\"10px\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <ToggleColorMode />\n\n          <Button\n            onClick={handleClickLogout}\n            aria-label=\"Logout\"\n            bg={useColorModeValue('whiteBG', 'darkBG')}\n            _active\n            _hover={{\n              background: useColorModeValue('hoverWhite', 'hoverBlack'),\n            }}\n            size=\"md\"\n          >\n            Logout\n          </Button>\n        </Box>\n      </Wrap>\n    </>\n  );\n};\n","import { Breadcrumb, BreadcrumbItem } from '@chakra-ui/react';\nimport { LinkStyled } from '../../pages/Layout/Layout.styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar = () => {\n  return (\n    <>\n      <Breadcrumb display=\"flex\" gap=\"15px\" alignItems=\"center\">\n        <BreadcrumbItem>\n          <LinkStyled as={NavLink} to=\"/contacts\">\n            Contacts\n          </LinkStyled>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <LinkStyled as={NavLink} to=\"/add\">\n            Add contacts\n          </LinkStyled>\n        </BreadcrumbItem>\n      </Breadcrumb>\n    </>\n  );\n};\n","import { motion } from 'framer-motion';\nimport { chakra, shouldForwardProp } from '@chakra-ui/react';\n\nconst StyledDiv = chakra(motion.div, {\n  shouldForwardProp: prop => {\n    return shouldForwardProp(prop) || prop === 'transition';\n  },\n});\n\nexport const Section = ({ children, delay = 0 }) => (\n  <StyledDiv\n    initial={{ y: 10, opacity: 0 }}\n    animate={{ y: 0, opacity: 1 }}\n    transition={{ duration: 0.8, delay }}\n    mb={6}\n  >\n    {children}\n  </StyledDiv>\n);\n","import {\n  Box,\n  SkeletonCircle,\n  SkeletonText,\n  useColorModeValue,\n} from '@chakra-ui/react';\n\nexport const SkeletonPost = () => {\n  return (\n    <>\n      <Box\n        padding=\"4\"\n        boxShadow=\"lg\"\n        borderRadius=\"10px\"\n        bg={useColorModeValue('white', '#2D3748')}\n      >\n        <SkeletonCircle size=\"6\" />\n        <SkeletonText mt=\"4\" noOfLines={3} spacing=\"4\" skeletonHeight=\"2\" />\n      </Box>\n    </>\n  );\n};\n","const getFilterValue = state => state.filter;\n\nconst filterSelectors = { getFilterValue };\nexport default filterSelectors;\n"],"names":["LinkStyled","styled","Link","props","useColorModeValue","Logo","ToggleColorMode","useColorMode","colorMode","toggleColorMode","isMode","AnimatePresence","mode","motion","style","display","initial","y","opacity","animate","exit","transition","duration","onClick","fontSize","icon","color","bg","_active","_hover","background","AppBar","navigate","useNavigate","dispatch","useDispatch","token","useSelector","authSelectors","backgroundBtn","hoverBtn","data","useGetUserQuery","skip","useEffect","refresh","isLoading","isLoggedIn","as","maxWidth","width","height","justifyContent","mx","py","to","NavBar","UserMenu","gap","alignItems","size","ContactForm","toast","useToast","usePostContactMutation","postContact","useGetContactsQuery","backgroundBtnSave","maxW","w","onSubmit","e","preventDefault","form","target","name","elements","value","number","find","cont","toLowerCase","description","isClosable","status","reset","flexDirection","isRequired","pointerEvents","children","boxSize","MdAccountCircle","placeholder","_placeholder","focusBorderColor","type","mt","ContactList","contacts","spacing","templateColumns","map","contact","ContactListItem","id","useDeleteContactMutation","deleteContact","backgroundAvatar","lightBackground","borderRadius","flex","flexWrap","charAt","variant","borderColor","EditForm","useDisclosure","isOpen","onOpen","onClose","usePatchContactMutation","patchContact","isCentered","patchedContacts","contactId","defaultValue","my","Filter","filterValue","filterSelectors","inputBorderColor","onChange","event","filtered","setFilter","Footer","px","userName","userToken","userEmail","useLogOutUserMutation","logOutUser","handleClickLogout","checkedUser","logOut","label","closeDelay","hasArrow","arrowSize","backgroundColor","src","userAvatar","fontWeight","orientation","NavLink","StyledDiv","chakra","shouldForwardProp","prop","Section","delay","mb","SkeletonPost","padding","boxShadow","noOfLines","skeletonHeight","getFilterValue","state","filter"],"sourceRoot":""}